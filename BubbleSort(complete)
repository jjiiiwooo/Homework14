#include <stdio.h>
#include <stdlib.h>
#define SWAP(x,y,t) ((t)=(x), (x)=(y), (y)=(t))


int list[20];
int n;

//정렬 과정 출력 
void Print(int list[], int n) {
	int i = 0;
	for (i = 0; i < n; i++)
	{
		printf("%3d", list[i]);
	}
	printf("\n");
}

//버블 정렬 
void bubble_sort(int list[], int n)
{
	int i, j, temp;
	int MoveCount = 0; //이동횟수
	int CompareCount = 0; //비교횟수 

	for (i = n - 1; i > 0; i--) {
		for (j = 0; j < i; j++) 	// 앞뒤의 레코드를 비교한 후 교체
			if (list[j] > list[j + 1]) {
				SWAP(list[j], list[j + 1], temp);
				CompareCount++;
			}
		MoveCount++;
		Print(list, n);
	}



	printf("MoveCount:%d\n", MoveCount);
	printf("CompareCount:%d\n", CompareCount);
}





int main(void)
{
	int i;
	n = 20;
	srand(time(NULL));
	for (i = 0; i < n; i++)      	// 난수 생성 및 출력 
		list[i] = rand() % 100; // 난수 발생 범위 0~99

	printf("Original List\n");
	Print(list, n);

	printf("버블정렬\n");
	printf("\n");
	bubble_sort(list, n);


	return 0;
}
